C51 COMPILER V9.00   MAIN                                                                  03/19/2015 09:44:12 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: D:\Keil uVision C51\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #define _MAIN_C
   2          #include <confi.h>
   3          #include <LCD.h>
   4          #include <I2C.h>
   5          #include <main.h>
   6          
   7          unsigned char code LedChar[]={0x03,0x9F,0x25,0x0D,0x99,0x49,0x41,0x1F,0x01,0x09};
   8          unsigned char code LedChar_Dot[]={0x02,0x9E,0x24,0x0C,0x98,0x48,0x40,0x1E,0x00,0x08};
   9          unsigned char LedBuff[2]={0x02,0x03};
  10          unsigned char Key_Down[2]={0,0};
  11          unsigned char Keybuff[2]={0,0};
  12          unsigned char T0RH,T0RL;
  13          unsigned char Keyflag=0;
  14          unsigned char volt;
  15          unsigned long cnt=0;
  16          unsigned long cap=0;
  17          unsigned char str[6];
  18          
  19                     
  20          void main()
  21          {
  22   1        T2TRIG=1;
  23   1        T2EX=1;
  24   1        RST_555=0;
  25   1        LCD_EN=0;
  26   1        DIG1=0;
  27   1        DIG2=0;
  28   1        KEY1=1;
  29   1        KEY2=1;
  30   1        EA=1;
  31   1      
  32   1        configure_timer0(2);
  33   1        configure_timer2();
  34   1        configure_ADC();
  35   1        LCD_initial();
  36   1        
  37   1      
  38   1        while(1)
  39   1        {
  40   2          Is_Key_Down();
  41   2              if(Keyflag)
  42   2              {
  43   3                Key_Action();
  44   3              }
  45   2        }
  46   1      }
  47          
  48          
  49          void Is_Key_Down()
  50          {
  51   1         unsigned char i=0;
  52   1         for(i=0;i<2;i++)
  53   1         {
  54   2           if(Keybuff[i]!=Key_Down[i])
  55   2               {
C51 COMPILER V9.00   MAIN                                                                  03/19/2015 09:44:12 PAGE 2   

  56   3                 if(Keybuff[i]!=0)
  57   3                 {
  58   4                   Keyflag=i+1;
  59   4                 }
  60   3                Keybuff[i]=Key_Down[i];
  61   3               }
  62   2         }  
  63   1      }
  64          
  65          
  66          void Key_Action()
  67          {
  68   1        if(Keyflag==2)
  69   1        {
  70   2           LedBuff[0]=0x02;
  71   2               LedBuff[1]=0x03;
  72   2               LCD_clear();    
  73   2        }
  74   1        else if(Keyflag==1)
  75   1        {
  76   2          do
  77   2              {
  78   3                I2C_start();
  79   3                if(I2C_write(0x91))
  80   3                  break;
  81   3                I2C_stop();
  82   3              }while(1);
  83   2          RST_555=1;
  84   2              do
  85   2              {
  86   3                T2TRIG=0;
  87   3                T2TRIG=1;
  88   3              }while(~T2EX);
  89   2              EXEN2=1;
  90   2              TR2=1;
  91   2              do
  92   2              {
  93   3                volt=I2C_readACK();
  94   3                volt=(volt*40)/255;
  95   3            LedBuff[0]=LedChar_Dot[volt/10];
  96   3            LedBuff[1]=LedChar[volt%10];
  97   3              }while(T2EX);
  98   2              I2C_readNAK();
  99   2              I2C_stop();
 100   2        }       
 101   1        else
 102   1        {} 
 103   1        Keyflag=0;
 104   1      }
 105          
 106          
 107          void LED_Scan()
 108          {
 109   1        static unsigned char i=1;
 110   1        P2=0xFF;
 111   1        switch(i)
 112   1        {
 113   2          case 1: 
 114   2                DIG1=0;
 115   2                DIG2=1;
 116   2                P2=LedBuff[0];
 117   2                i++;
C51 COMPILER V9.00   MAIN                                                                  03/19/2015 09:44:12 PAGE 3   

 118   2                break;
 119   2              case 2:
 120   2                DIG2=0;
 121   2                DIG1=1;
 122   2                P2=LedBuff[1];
 123   2                i--;
 124   2                break;
 125   2              default:break;    
 126   2        }
 127   1      }
 128          
 129          void Key_Scan()
 130          {
 131   1        unsigned char i=0;
 132   1        static unsigned char keybuf[2]={0xFF,0xFF};
 133   1        
 134   1        keybuf[0]=(keybuf[0]<<1)|KEY1;
 135   1        keybuf[1]=(keybuf[1]<<1)|KEY2;
 136   1        for(i=0;i<2;i++)
 137   1        {
 138   2          if(keybuf[i]==0x00)
 139   2                Key_Down[i]=1;
 140   2              else if(keybuf[i]==0xFF)
 141   2                Key_Down[i]=0;
 142   2              else
 143   2              {}
 144   2        }
 145   1      }
 146          
 147          void configure_ADC()
 148          {
 149   1         do
 150   1              {
 151   2                I2C_start();
 152   2                if(I2C_write(0x90))
 153   2                  break;
 154   2                I2C_stop();
 155   2              }while(1);
 156   1              I2C_write(0x00);
 157   1              I2C_stop();     
 158   1      }
 159             
 160          void configure_timer0(int t)
 161          {
 162   1        unsigned int temp;
 163   1      
 164   1        TMOD=0x01;
 165   1        temp=(11059200/12*t)/1000;
 166   1        temp=65536-temp;
 167   1        temp+=10;
 168   1        T0RH=(unsigned char)(temp>>8);
 169   1        T0RL=(unsigned char)temp;
 170   1        TH0=T0RH;
 171   1        TL0=T0RL;
 172   1        ET0=1;
 173   1        TR0=1;
 174   1      }
 175          
 176          void configure_timer2()
 177          {
 178   1        RCLK=0;
 179   1        TCLK=0;
C51 COMPILER V9.00   MAIN                                                                  03/19/2015 09:44:12 PAGE 4   

 180   1        EXEN2=0;
 181   1        TR2=0;
 182   1        C_T2=0;
 183   1        CP_RL2=1;
 184   1        ET2=1;
 185   1        TH2=0;
 186   1        TL2=0;
 187   1        RCAP2H=0;
 188   1        RCAP2L=0;
 189   1      }
 190          
 191          void interrupt_timer0() interrupt 1
 192          {
 193   1        TH0=T0RH;
 194   1        TL0=T0RL;
 195   1        LED_Scan();
 196   1        Key_Scan();
 197   1      }
 198          
 199          void interrupt_timer2() interrupt 5
 200          {
 201   1        unsigned int temp=0;
 202   1      
 203   1        if(TF2)
 204   1        {
 205   2          TF2=0;
 206   2              cnt=cnt+65536;
 207   2        }
 208   1        if(EXF2)
 209   1        {
 210   2          EXF2=0;
 211   2          RST_555=0;
 212   2          EXEN2=0;
 213   2          TR2=0;
 214   2              TH2=0;
 215   2          TL2=0;
 216   2              temp=RCAP2H;
 217   2              temp<<=8;
 218   2              temp+=RCAP2L;
 219   2              cnt+=temp;
 220   2              Convert(cnt);
 221   2              cnt=0;
 222   2              LCD_showstr(0,0,"the capacitance");
 223   2              LCD_showstr(0,1,"is: ");
 224   2              LCD_showstr(4,1,str);   
 225   2        }
 226   1      }
 227          
 228          void Convert(unsigned long cnt)
 229          {
 230   1        if(cnt<34)
 231   1        {
 232   2           cap=30*cnt;
 233   2               str[0]=cap/100+'0';
 234   2               str[1]=(cap/10)%10+'0';
 235   2               str[2]=cap%10+'0';
 236   2               str[3]='p';
 237   2               str[4]='F';
 238   2               str[5]='\0';
 239   2        }
 240   1        else if(cnt>=34&&cnt<33334)
 241   1        {
C51 COMPILER V9.00   MAIN                                                                  03/19/2015 09:44:12 PAGE 5   

 242   2           cap=(3*cnt)/100;
 243   2           str[0]=cap/100+'0';
 244   2               str[1]=(cap/10)%10+'0';
 245   2               str[2]=cap%10+'0';
 246   2               str[3]='n';
 247   2               str[4]='F';
 248   2               str[5]='\0';
 249   2        }
 250   1        else if(cnt>=33334&&cnt<33333333)
 251   1        {
 252   2           cap=(cnt*3)/100000;
 253   2               str[0]=cap/100+'0';
 254   2               str[1]=(cap/10)%10+'0';
 255   2               str[2]=cap%10+'0';
 256   2               str[3]='u';
 257   2               str[4]='F';
 258   2               str[5]='\0';
 259   2        }
 260   1        else
 261   1        {}
 262   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1024    ----
   CONSTANT SIZE    =     41    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     27       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
